mutate(Expected = ifelse(SOA < 0, 1,0), Actual = rbinom(720,1,p))
write.table(alldata1,paste("Data/Raw Data.txt", sep=""), sep='\t', col.names = T, row.names = F)
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(alldata1) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
source("Graph functions.R")
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(alldata1) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
PCD_graph
View(genHypothesis)
t <- c()
t[1:length(wInt)]
df <- expand.grid(Participant = 1:numParticipants,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Trial = c(1:30),
SOA = SOA) %>%
nest(data = c(Trial))
View(df)
df <- expand.grid(Participant = 1:numParticipants,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Trial = c(1:30),
SOA = SOA) %>%
group_by(Participant,Condition,Hands,SOA) %>%
nest(data = c(Trial))
df <- expand.grid(Participant = 1:numParticipants,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Trial = c(1:30),
SOA = SOA) %>%
group_by(Participant,Condition,Hands,SOA) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(Participant = 1:numParticipants,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Trial = c(1:30),
SOA = SOA) %>%
group_by(Participant,Condition,Hands,SOA) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(Participant = 1:numParticipants,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Trial = c(1:30),
SOA = SOA) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
alldata1 <- df %>%
unnest(cols = c(data))
View(alldata1)
alldata1 <- df %>%
unnest(cols = c(data)) %>%
group_by(Participant,Condition,Hands,SOA)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
Hands <- rep(c('Crossed', 'Uncrossed'),8)
Hands <- rep('Crossed',8)
Hands <- rep('Crossed',8, 'Uncrossed',8)
expand.grid(Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'))
expand.grid(Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),SOA = SOA)
expand.grid(SOA = SOA,Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'))
df <- expand.grid(Participant = 1:numParticipants,
SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Trial = c(1:30)) %>%
nest(data = c(Trial))
View(df)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial))
View(df)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
alldata1 <- df %>%
unnest(cols = c(data))
View(alldata1)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
alldata1 <- df %>%
unnest(cols = c(data)) %>%
add_column(p) %>%
unnest(cols = c(data)) %>%
group_by(Participant) %>%
mutate(Expected = ifelse(SOA < 0, 1,0), Actual = rbinom(720,1,p))
write.table(alldata1,paste("Data/Raw Data.txt", sep=""), sep='\t', col.names = T, row.names = F)
source("Graph functions.R")
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(alldata1) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
PCD_graph
#plots overall data separated by hand posture and condition
Pivot_overall(alldata1) %>%
ggplot(aes(x = SOA, y = Data, group = interaction(Condition,Hands), linetype = Hands, fill = Condition))+
geom_errorbar(aes(ymin=Data-SE,ymax=Data+SE),width=.01, linetype = 'solid')+
geom_line(size=0.5)+geom_point(size=5, shape=21)+
scale_linetype_manual(values = c('dashed','solid'))+
scale_fill_manual(values = c("grey", "grey25"))+
scale_x_continuous(breaks=seq(-0.4,0.4,0.4))+
scale_y_continuous(breaks=seq(0,1,0.5))+
ylab("Proportion of 'Right-First' Responses")+xlab("SOA (s)")+
annotation_custom(ggplotGrob(PCD_graph),xmin=0.15,ymin=-0.03, xmax=0.43, ymax = 0.55) #inlays PCD graph
p
View(df)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
alldata1 <- df %>%
unnest(cols = c(data))
View(alldata1)
alldata1 <- df %>%
unnest(cols = c(data)) %>%
add_column(p)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 20
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt[1], df$taskExt[1],
1)
df$wInt
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt, df$taskExt,
1)
numParticipants = 1
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
nest(data = -c(Participant)) %>%
mutate(wInt = round(rnorm(numParticipants,20,1),1), wExt = round(rnorm(numParticipants,10,1),1),
PopInt = 1, PopExt = 1,
taskInt = 1, taskExt = 2)
p <- genHypothesis(df$wInt, df$wExt,
SOA,
df$taskInt, df$taskExt,
1)
p
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Create Hypothetical Data
numParticipants = 1
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt <- c(P = rnorm(numParticipants,10,1))
wExt <- c(P = rnorm(numParticipants,20,1))
taskInt = 1
taskExt = 1.5
wInt <- c(P = rnorm(numParticipants,10,1))
wExt <- c(P = rnorm(numParticipants,20,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 1)
numParticipants = 10
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt <- c(P = rnorm(numParticipants,10,1))
wExt <- c(P = rnorm(numParticipants,20,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 1)
wInt <- c(P = rnorm(numParticipants,10,1))
wExt <- c(P = rnorm(numParticipants,14,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 1)
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30))
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial))
df <- expand.grid(SOA = SOA,
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial))
View(df)
alldata1 <- df %>%
add_column(p) %>%
unnest(cols = c(data)) %>%
group_by(Participant) %>%
mutate(Expected = ifelse(SOA < 0, 1,0), Actual = rbinom(720,1,p))
source("Graph functions.R")
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(alldata1) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
PCD_graph
#plots overall data separated by hand posture and condition
Pivot_overall(alldata1) %>%
ggplot(aes(x = SOA, y = Data, group = interaction(Condition,Hands), linetype = Hands, fill = Condition))+
geom_errorbar(aes(ymin=Data-SE,ymax=Data+SE),width=.01, linetype = 'solid')+
geom_line(size=0.5)+geom_point(size=5, shape=21)+
scale_linetype_manual(values = c('dashed','solid'))+
scale_fill_manual(values = c("grey", "grey25"))+
scale_x_continuous(breaks=seq(-0.4,0.4,0.4))+
scale_y_continuous(breaks=seq(0,1,0.5))+
ylab("Proportion of 'Right-First' Responses")+xlab("SOA (s)")+
annotation_custom(ggplotGrob(PCD_graph),xmin=0.15,ymin=-0.03, xmax=0.43, ymax = 0.55) #inlays PCD graph
alldata1 <- df %>%
add_column(p)
numParticipants = 10
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt <- c(P = rnorm(numParticipants,5,1))
wExt <- c(P = rnorm(numParticipants,7,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 1)
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 30)
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 30)
numParticipants = 1
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt <- c(P = rnorm(numParticipants,5,1))
wExt <- c(P = rnorm(numParticipants,7,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 30)
p
wInt <- c(P = rnorm(numParticipants,5,1))
wExt <- c(P = rnorm(numParticipants,7,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 30)
t <- c()
#allocentric crossed first becaase R is alphabetical
t[1:length(wInt)] = wInt*taskInt - wExt*taskExt
#then allocentric uncrossed
t[(length(wInt)+1):(length(wInt)*2)] = wInt*taskInt + wExt*taskExt
#then somatotopic crossed
t[(length(wInt)*2+1):(length(wInt)*3)] = wInt - wExt
#finally somatotopic uncrossed
t[(length(wInt)*3+1):(length(wInt)*4)] = wInt + wExt
#takes the exponent and SOA and returns the hypothesized probability
hyp<-function(SOA, t){
x = list((1/(1+exp(SOA*t*-1))))
return(x)
}
p <-c()
p <- sapply(SOA, hyp, t=t)
p <- do.call(c, p)
p <- sapply(SOA, hyp, t=t)
p <- do.call(c, p)
c
numParticipants = 1
SOA = c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt <- c(P = rnorm(numParticipants,5,1))
wExt <- c(P = rnorm(numParticipants,7,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt, wExt, SOA,taskInt, taskExt, 30)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial))
alldata1 <- df %>%
add_column(p) %>%
unnest(cols = c(data)) %>%
group_by(Participant) %>%
mutate(Expected = ifelse(SOA < 0, 1,0), Actual = rbinom(720,1,p))
#plots overall data separated by hand posture and condition
Pivot_overall(alldata1) %>%
ggplot(aes(x = SOA, y = Data, group = interaction(Condition,Hands), linetype = Hands, fill = Condition))+
geom_errorbar(aes(ymin=Data-SE,ymax=Data+SE),width=.01, linetype = 'solid')+
geom_line(size=0.5)+geom_point(size=5, shape=21)+
scale_linetype_manual(values = c('dashed','solid'))+
scale_fill_manual(values = c("grey", "grey25"))+
scale_x_continuous(breaks=seq(-0.4,0.4,0.4))+
scale_y_continuous(breaks=seq(0,1,0.5))+
ylab("Proportion of 'Right-First' Responses")+xlab("SOA (s)")+
annotation_custom(ggplotGrob(PCD_graph),xmin=0.15,ymin=-0.03, xmax=0.43, ymax = 0.55) #inlays PCD graph
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial))
View(df)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
mutate(wInt = rnorm(numParticipants,5,1), wExt = rnorm(numParticipants, 7,1), taskInt = rnorm(1,1,1), taskExt = rnorm(1,1.5.1))
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = 1:numParticipants,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
mutate(wInt = rnorm(numParticipants,5,1), wExt = rnorm(numParticipants, 7,1),
taskInt = rnorm(1,1,1), taskExt = rnorm(1,1.5,1))
View(df)
