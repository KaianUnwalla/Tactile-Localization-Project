rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
numParticipants = 2
wInt_current <- c(P = rnorm(numParticipants,5,1))
wExt_current <- c(P = rnorm(numParticipants,8,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
numParticipants = 2
SOA <- c(-0.4,-0.2,-0.5,0.5,0.2,0.4)
wInt_current <- c(P = rnorm(numParticipants,5,1))
wExt_current <- c(P = rnorm(numParticipants,8,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
p
alldata1 <- read.table(paste('Data/E1alldata.txt', sep = ""), header = T)
alldata1 <- read.table('Data/E1alldata.txt', header = T)
getwd()
alldata1 <- read.table('E1alldata.txt', header = T)
# Generate initial hypothesis
pivot_full<-alldata1 %>%
filter(Actual>=0) %>% #remove timeouts
group_by(SOA,Condition,Hands,Participant,Sex) %>%
summarise(numTrials = length(Actual), numRF = sum(Actual), Data = mean(Actual)) %>%
ungroup()
View(pivot_full)
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
p
SOA <- unique(pivot_full$SOA) #levels of SOAs for hypothesis
SOA <- c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
wInt_current <- c(P = rnorm(numParticipants,5,1))
wExt_current <- c(P = rnorm(numParticipants,8,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
SOA <- unique(pivot_full$SOA) #levels of SOAs for hypothesis
View(pivot_full)
df <- expand.grid(SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants))
df <- expand.grid(SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30))
df <- expand.grid(SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(Trial)
df <- expand.grid(SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(c(Trial))
df <- expand.grid(SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial))
View(df)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial))
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
group_by(SOA,Condition,Hands,Participant) %>%
#creating path where output files will be saved
path = paste("output/Test/",time,"/",Experiment, sep = "")
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
group_by(SOA,Condition,Hands,Participant)
View(df)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
group_by(SOA,Condition,Hands,Participant) %>%
add_column(p)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
sort(-SOA,Condition,Hands,Participant)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
group_by(SOA,Condition,Hands,Participant) %>%
mutate(test = 1)
df <- expand.grid(SOA = SOA,
Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
Participant = c(1:numParticipants),
Trial = c(1:30))
df <- expand.grid(Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
SOA = SOA,
Participant = c(1:numParticipants),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
group_by(SOA,Condition,Hands,Participant) %>%
mutate(test = 1)
df <- expand.grid(Condition = c('A','B'),
Hands = c('Crossed','Uncrossed'),
SOA = SOA,
Participant = c(1:numParticipants))
df <- expand.grid(Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Participant = c(1:numParticipants))
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA)
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p)
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA),
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p)
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p)
View(df)
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p) %>%
unnest() %>%
mutate(Actual = rbinom(720,1,p))
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p) %>%
unnest()
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p) %>%
unnest() %>%
group_by(Participant) %>%
mutate(Actual = rbinom(720,1,p))
View(df)
rm(list=ls())
time<-format(Sys.time(),"%b%d_%H%M%S")
library(tidyverse)
library(tictoc)
library(truncnorm)
library(tidyfst)
tic.clearlog()
source("MCMC functions.R")
#Load the experiment data
Experiment = "E2"
alldata1 <- read.table('E1alldata.txt', header = T)
#Hypothetical Data Creation
numParticipants = 10
SOA <- c(-0.4,-0.2,-0.05,0.05,0.2,0.4)
wInt_current <- c(P = rnorm(numParticipants,5,1))
wExt_current <- c(P = rnorm(numParticipants,8,1))
taskInt = 1
taskExt = 1.5
#calculates hypothesized probabilites
p <- genHypothesis(wInt_current, wExt_current,
SOA,
taskInt, taskExt,
30)
df <- expand.grid(Participant = c(1:numParticipants),
Hands = c('Crossed','Uncrossed'),
Condition = c('A','B'),
SOA = SOA,
Trial = c(1:30)) %>%
nest(data = c(Trial)) %>%
add_column(p) %>%
unnest() %>%
group_by(Participant) %>%
mutate(Actual = rbinom(720,1,p))
source("Graph functions.R")
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(alldata1) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#plots overall data separated by hand posture and condition
Pivot_overall(alldata1) %>%
ggplot(aes(x = SOA, y = Data, group = interaction(Condition,Hands), linetype = Hands, fill = Condition))+
geom_errorbar(aes(ymin=Data-SE,ymax=Data+SE),width=.01, linetype = 'solid')+
geom_line(size=0.5)+geom_point(size=5, shape=21)+
scale_linetype_manual(values = c('dashed','solid'))+
scale_fill_manual(values = c("grey", "grey25"))+
scale_x_continuous(breaks=seq(-0.4,0.4,0.4))+
scale_y_continuous(breaks=seq(0,1,0.5))+
ylab("Proportion of 'Right-First' Responses")+xlab("SOA (s)")+
annotation_custom(ggplotGrob(PCD_graph),xmin=0.15,ymin=-0.03, xmax=0.43, ymax = 0.55)
View(alldata1)
View(alldata1)
View(df)
View(alldata1)
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(df) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
source("Graph functions.R")
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(df) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
PCD_graph
PCD_error(df)
#plots overall PCD score separated by condition
PCD_graph<-PCD_error(df) %>%
ggplot(aes(x=Condition,y=PCD,fill=Condition)) +
geom_bar(stat="identity",position=position_dodge(), color='black', width = 0.5) +
scale_fill_manual(values = c('grey','grey25'))+
geom_errorbar(aes(ymin=PCD-SE,ymax=PCD+SE),width=.05)+
ylab('PCD Score')+
#scale_y_continuous(expand = c(0,0), limits = c(0,2))+
kaian_theme(base_size = 15)+
theme(legend.position = 'none',
axis.text.x = element_blank(), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
PCD_graph
#plots overall data separated by hand posture and condition
Pivot_overall(df) %>%
ggplot(aes(x = SOA, y = Data, group = interaction(Condition,Hands), linetype = Hands, fill = Condition))+
geom_errorbar(aes(ymin=Data-SE,ymax=Data+SE),width=.01, linetype = 'solid')+
geom_line(size=0.5)+geom_point(size=5, shape=21)+
scale_linetype_manual(values = c('dashed','solid'))+
scale_fill_manual(values = c("grey", "grey25"))+
scale_x_continuous(breaks=seq(-0.4,0.4,0.4))+
scale_y_continuous(breaks=seq(0,1,0.5))+
ylab("Proportion of 'Right-First' Responses")+xlab("SOA (s)")+
annotation_custom(ggplotGrob(PCD_graph),xmin=0.15,ymin=-0.03, xmax=0.43, ymax = 0.55)
